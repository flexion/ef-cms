name: Create an intermediate branch to experimental3

on:
  pull_request:
    branches: [experimental3]
    type:
      - opened

jobs:
  # check-for-intermediate-branch:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     create-branch-flag: ${{ steps.check_branch.outputs.create-branch-flag }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set Git config
  #       run: |
  #         git config --local user.email "jabu@flexion.us"
  #         git config --local user.name "Joshua Abu"

  #     - name: Set flag
  #       id: check_branch
  #       run: |
  #         feature_branch=${{ github.head_ref }}
  #         intermediate_branch="${feature_branch}-intermediate-to-experimental3"

  #         # get intermediate branch related commits in both repos
  #         sha_of_int_branch=$(git ls-remote origin $intermediate_branch)

  #         if [[ -n "${sha_of_int_branch}" ]]
  #         then
  #           echo "create-branch-flag=false" >> "$GITHUB_OUTPUT"
  #         else
  #           echo "create-branch-flag=true" >> "$GITHUB_OUTPUT"
  #         fi
  #     - name: LOG FLAG
  #       run: |
  #         echo "FLAG IS: ${{ steps.check_branch.outputs.create-branch-flag }}"

  create-intermediate-branch:
    # needs: check-for-intermediate-branch
    # if: needs.check-for-intermediate-branch.outputs.create-branch-flag == 'true'
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.get_pr_number.outputs.pr_number }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'experimental3'
          fetch-depth: '0'
      - name: Set Git config
        run: |
          git config --local user.email "jabu@flexion.us"
          git config --local user.name "Joshua Abu"

      - name: Create Intermediate branch
        run: |
          destination_branch=${{ github.base_ref }}
          feature_branch=${{ github.head_ref }}
          intermediate_branch="${feature_branch}-intermediate-to-experimental3"

          # Create a copy of the destination branch
          git checkout -b "${intermediate_branch}"

          # Merge the feature branch into the intermediate branch
          git pull --strategy ort --no-rebase origin $feature_branch

          # create a commit with unresolved merge conflicts
          if [[ -n $(git status --porcelain | grep '^UU') ]]; then
            git add .
            git commit -m "MERGE CONFLICTS: PLEASE RESOLVE!" --no-verify
          fi

          # Push the new intermediate to remote
          git push -u origin "${intermediate_branch}"

      - name: Make PR of Intermediate branch to Test
        id: make_pr_id
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          destination_branch=${{ github.base_ref }}
          feature_branch=${{ github.head_ref }}

          sudo apt-get update
          sudo apt-get install hub

          pr_title="${feature_branch} intermediate to experimental3"
          hub pull-request -b ${destination_branch} -m "$pr_title" -l "to test"

      - name: Get PR number of intermediate branch
        needs: make_pr_id
        id: get_pr_number
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          head_branch="${{ github.head_ref }}-intermediate-to-test"
          base_branch=${{ github.base_ref }}

          PR_NUMBER=$(hub pr list -b $base_branch -h $head_branch --format="%I")

          echo "pr_number=$PR_NUMBER" >> "$GITHUB_OUTPUT"

      - name: Close PR with comment
        uses: peter-evans/close-pull@v2
        with:
          pull-request-number: ${{ github.event.pull_request.number }}
          comment: "Auto Closing this PR. An intermediate branch has been created. Here's the PR number #${{ steps.get_pr_number.outputs.pr_number }}"
