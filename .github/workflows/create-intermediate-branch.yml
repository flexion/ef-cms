name: Create an intermediate branch to experimental3

on:
  pull_request:
    branches: [experimental3]
    type:
      - opened

jobs:
  check-for-intermediate-branch:
    runs-on: ubuntu-latest
    outputs:
      intermediate_branch_exists: ${{ steps.check_branch.outputs.intermediate_branch_exists }}
    steps:
      - uses: actions/checkout@v3
      - name: Set Git config
        run: |
          git config --local user.email "jabu@flexion.us"
          git config --local user.name "Joshua Abu"

      - name: Set flag
        id: check_branch
        run: |
          feature_branch=${{ github.head_ref }}
          intermediate_branch="${feature_branch}-intermediate-to-experimental3"
          flexion_remote_address=https://github.com/flexion/ef-cms.git
          court_remote_address=https://github.com/ustaxcourt/ef-cms.git

          git fetch --all

          # set flexion remote branch
          git remote add flexion ${flexion_remote_address} 

          # get intermediate branch related commits in both repos
          sha_of_int_branch_in_flexion=$(git ls-remote ${flexion_remote_address} ${intermediate_branch})
          sha_of_int_branch_in_court=$(git ls-remote ${court_remote_address} ${intermediate_branch})

          if [[ -n "${sha_of_int_branch_in_flexion}" || -n "${sha_of_int_branch_in_court}" ]]
          then
            echo "intermediate_branch_exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "intermediate_branch_exists=false" >> "$GITHUB_OUTPUT"
          fi

  create-intermediate-branch:
    needs: check-for-intermediate-branch
    if: ${{ needs.check-for-intermediate-branch.outputs.intermediate_branch_exists == false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Create Intermediate branch
        run: |
          destination_branch=experimental3
          feature_branch=${{ github.head_ref }}
          intermediate_branch="${feature_branch}-intermediate-to-experimental3"

          # Get the base branch
          git fetch origin
          git checkout $destination_branch
          git pull

          # Create a copy of the destination branch
          git checkout -b $intermediate_branch

          # Merge the feature branch into the intermediate branch
          git merge "origin/${feature_branch}"

          # Push the new intermediate to remote
          git push -u origin "${intermediate_branch}"

      - name: Make PR of Intermediate branch to Test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          destination_branch=experimental3
          feature_branch=${{ github.head_ref }}
          intermediate_branch="${feature_branch}-intermediate-to-experimental3"

          sudo apt-get update
          sudo apt-get install hub

          pr_title="${feature_branch} intermediate to experimental3"
          hub pull-request -b ${destination_branch} -m "$pr_title"
