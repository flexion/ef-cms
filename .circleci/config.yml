version: 2
jobs:
  build:
    machine:
      docker_layer_caching: true

    steps:
      - checkout
      - run: echo "hello world"
      # - run: docker build -t efcms -f Dockerfile .

      # - run: docker run --rm efcms /bin/sh -c 'cd shared && ./run-shellcheck.sh'
      # - run: docker run --rm efcms /bin/sh -c 'cd shared && npm run lint'
      # - run: docker run --rm efcms /bin/sh -c 'cd shared && npm audit'
      # - run: docker run --rm efcms /bin/sh -c 'cd shared && npm run test'

      # - run: docker run --rm efcms /bin/sh -c 'cd efcms-service && ./run-shellcheck.sh'
      # - run: docker run --rm efcms /bin/sh -c 'cd efcms-service && npm run lint'
      # - run: docker run --rm efcms /bin/sh -c 'cd efcms-service && ./run-audit.sh'
      # - run: docker run --rm efcms /bin/sh -c 'cd efcms-service && npm run test'

      # - run: docker run --rm efcms /bin/sh -c 'cd web-client && ./run-shellcheck.sh'
      # - run: docker run --rm efcms /bin/sh -c 'cd web-client && npm run lint'
      # - run: docker run --rm efcms /bin/sh -c 'cd web-client && ./run-audit.sh'
      # - run: docker run --rm efcms /bin/sh -c 'cd web-client && npm run test:unit'

      # - run: docker run --rm -e AWS_ACCESS_KEY_ID=noop -e AWS_SECRET_ACCESS_KEY=noop efcms /bin/sh -c 'cd efcms-service && npm run install:dynamodb && (npm start &) && ../wait-until.sh http://localhost:3000/v1/swagger && cd ../web-client && (npm run dev &) && ../wait-until.sh http://localhost:1234 && npm run test:pa11y'
      # - run: docker run --rm -e AWS_ACCESS_KEY_ID=noop -e AWS_SECRET_ACCESS_KEY=noop efcms /bin/sh -c "cd efcms-service && npm run install:dynamodb && (npm start &) && ../wait-until.sh http://localhost:3000/v1/swagger && cd ../web-client && npm run test"
      # - run: docker run --rm -e SLS_DEBUG=* -e AWS_ACCESS_KEY_ID=noop -e AWS_SECRET_ACCESS_KEY=noop efcms /bin/sh -c 'cd efcms-service && npm run install:dynamodb && (npm start &) && ../wait-until.sh http://localhost:3000/v1/swagger && cd ../web-client && (npm run dev:cypress &) && ../wait-until.sh http://localhost:1234 && npm run cypress'

  deploy:
    machine:
      pre:
        - echo "export ENV='$(./get-env.sh ${CIRCLE_BRANCH})'" >> "$BASH_ENV"
      docker_layer_caching: true
    steps:
      - checkout
      - run: echo $ENV
      #
      # - run: docker run -e "EFCMS_DOMAIN=${EFCMS_DOMAIN}" --rm efcms /bin/sh -c "cd web-client/terraform/main && ../bin/deploy-app.sh ${ENV}"
      # - run: "CONTAINER_NAME=ui-dist-${BUILD_NUMBER} ./docker-build.sh ${env}"

  # deploApi:
  #   machine:
  #     docker_layer_caching: true
  #   steps:
  #     - checkout
  #     - run: ./docker-terraform.sh ${slsStage}
  #     - run: ./docker-serverless.sh ${slsStage} ${region}
  #     - run: ./docker-route53.sh ${branchMap[env.branch_name]}"
  #     - run: ./docker-s3replication.sh ${branchMap[env.branch_name]}
  #     - run: ./docker-globaltables.sh ${branchMap[env.branch_name]} ${regions.join(',')}
  #     - run: ./docker-cognito-customize.sh ${branchMap[env.branch_name]}
  #     - run: ./docker-cognito-users.sh ${branchMap[env.branch_name]}
  #     - run: ./docker-smoketests.sh ${slsStage} ${region}

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          # filters:
          #   branches:
          #     only: 
          #       - develop