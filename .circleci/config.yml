version: 2
jobs:
  build:
    machine:
      docker_layer_caching: true

    steps:
      - checkout

      - run: docker build -t efcms -f Dockerfile .

      - run: docker run --rm efcms /bin/sh -c 'cd shared && ./run-shellcheck.sh'
      - run: docker run --rm efcms /bin/sh -c 'cd shared && npm run lint'
      - run: docker run --rm efcms /bin/sh -c 'cd shared && npm audit'
      - run: docker run --rm efcms /bin/sh -c 'cd shared && npm run test'

      - run: docker run --rm efcms /bin/sh -c 'cd efcms-service && ./run-shellcheck.sh'
      - run: docker run --rm efcms /bin/sh -c 'cd efcms-service && npm run lint'
      - run: docker run --rm efcms /bin/sh -c 'cd efcms-service && ./run-audit.sh'
      - run: docker run --rm efcms /bin/sh -c 'cd efcms-service && npm run test'

      - run: docker run --rm efcms /bin/sh -c 'cd web-client && ./run-shellcheck.sh'
      - run: docker run --rm efcms /bin/sh -c 'cd web-client && npm run lint'
      - run: docker run --rm efcms /bin/sh -c 'cd web-client && ./run-audit.sh'
      - run: docker run --rm efcms /bin/sh -c 'cd web-client && npm run test:unit'

      - run: docker run --rm -e AWS_ACCESS_KEY_ID=noop -e AWS_SECRET_ACCESS_KEY=noop efcms /bin/sh -c 'cd efcms-service && npm run install:dynamodb && (npm start &) && ../wait-until.sh http://localhost:3000/v1/swagger && cd ../web-client && (npm run dev &) && ../wait-until.sh http://localhost:1234 && npm run test:pa11y'
      - run: docker run --rm -e AWS_ACCESS_KEY_ID=noop -e AWS_SECRET_ACCESS_KEY=noop efcms /bin/sh -c "cd efcms-service && npm run install:dynamodb && (npm start &) && ../wait-until.sh http://localhost:3000/v1/swagger && cd ../web-client && npm run test"
      - run: docker run --rm -e SLS_DEBUG=* -e AWS_ACCESS_KEY_ID=noop -e AWS_SECRET_ACCESS_KEY=noop efcms /bin/sh -c 'cd efcms-service && npm run install:dynamodb && (npm start &) && ../wait-until.sh http://localhost:3000/v1/swagger && cd ../web-client && (npm run dev:cypress &) && ../wait-until.sh http://localhost:1234 && npm run cypress'

  deploy:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - run: echo "hello world"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          # filters:
          #   branches:
          #     only: 
          #       - develop